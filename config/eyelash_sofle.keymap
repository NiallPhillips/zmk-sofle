#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp NUMBER_1          &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp UP_ARROW     &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp EQUAL
&kp TAB         &kp Q                 &kp W         &kp E         &kp R         &kp T           &kp DOWN_ARROW   &kp Y          &kp U         &kp I         &kp O         &kp P         &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A                 &kp S         &kp D         &kp F         &kp G           &kp LEFT_ARROW   &kp H          &kp J         &kp K         &kp L         &kp SEMI      &kp APOS
&kp LCTRL       &kp Z                 &kp X         &kp C         &kp V         &kp B           &kp RIGHT_ARROW  &kp N          &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp HOME
&kp C_MUTE      &kp NON_US_BACKSLASH  &kp LEFT_ALT  &mo 1         &kp SPACE     &kp LCMD        &kp ENTER        &kp BACKSPACE  &kp ENTER     &mo 2         &trans        &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOLUME_UP>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE        &kp F1           &kp F2           &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10    &kp MINUS
&trans           &trans           &trans           &trans           &trans           &trans             &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS  &kp RIGHT_BRACKET
&trans           &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &trans           &trans           &trans             &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &trans     &kp PAGE_UP
&rgb_ug RGB_TOG  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12    &kp PAGE_DOWN
&kp C_MUTE       &trans           &trans           &trans           &trans           &trans             &mkp LCLK        &kp DEL          &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans      &trans     &trans       &trans
&trans       &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &trans      &trans     &trans       &trans
&trans       &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &trans       &trans
&bl BL_TOG   &sys_reset    &trans          &trans        &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &bl BL_TOG
&bootloader  &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
