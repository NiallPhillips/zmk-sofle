#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESCAPE  &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &mmv MOVE_Y(-300)  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8    &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&kp TAB     &kp Q           &kp W         &kp E         &kp R         &kp T           &mmv MOVE_Y(300)   &kp Y          &kp U         &kp I           &kp O         &kp P         &kp EQUAL
&kp ESCAPE  &kp A           &kp S         &kp D         &kp F         &kp G           &mmv MOVE_X(-300)  &kp H          &kp J         &kp K           &kp L         &kp SEMI      &kp LEFT_BRACKET
&kp LCTRL   &kp Z           &kp X         &kp C         &kp V         &kp B           &mmv MOVE_X(300)   &kp N          &kp M         &kp COMMA       &kp DOT       &kp FSLH      &kp RIGHT_BRACKET
&kp C_MUTE  &kp LEFT_SHIFT  &kp LEFT_ALT  &mo 1         &kp SPACE     &kp LCMD        &mkp LCLK          &kp BACKSPACE  &kp ENTER     &kp LEFT_SHIFT  &kp DEL       &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOLUME_UP>;
            display-name = "LAYER0";
        };

        Navigation {
            bindings = <
&rgb_ug RGB_TOG           &kp F1           &kp F2           &kp F3                &kp F4                 &kp F5             &mmv MOVE_Y(-500)  &kp F6            &kp F7           &kp F8           &kp F9           &kp F10  &kp F11
&trans                    &trans           &trans           &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans             &mmv MOVE_Y(500)   &trans            &kp HOME         &kp UP           &kp END          &trans   &kp F12
&trans                    &kp BACKSLASH    &kp TILDE        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans             &mmv MOVE_X(-500)  &kp SINGLE_QUOTE  &kp LEFT         &kp DOWN         &kp RIGHT        &trans   &kp PG_UP
&trans                    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF       &rgb_ug RGB_EFR        &rgb_ug RGB_SPI    &mmv MOVE_X(500)   &rgb_ug RGB_BRI   &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans   &kp PG_DN
&kp C_BRIGHTNESS_MAXIMUM  &trans           &trans           &trans                &trans                 &trans             &mkp LCLK          &trans            &trans           &trans           &trans           &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_2 {
            bindings = <
&trans        &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans        &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&kp CAPSLOCK  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans        &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans        &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            display-name = "Games";
            bindings = <
&kp ESCAPE      &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &mmv MOVE_Y(-300)  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8    &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&kp TAB         &kp Q           &kp W         &kp E         &kp R         &kp T           &mmv MOVE_Y(300)   &kp Y          &kp U         &kp I           &kp O         &kp P         &kp EQUAL
&kp LEFT_SHIFT  &kp A           &kp S         &kp D         &kp F         &kp G           &mmv MOVE_X(-300)  &kp H          &kp J         &kp K           &kp L         &kp SEMI      &kp LEFT_BRACKET
&kp LCTRL       &kp Z           &kp X         &kp C         &kp V         &kp B           &mmv MOVE_X(300)   &kp N          &kp M         &kp COMMA       &kp DOT       &kp FSLH      &kp RIGHT_BRACKET
&kp C_MUTE      &kp LEFT_SHIFT  &kp LEFT_ALT  &mo 1         &kp SPACE     &kp LCMD        &mkp LCLK          &kp BACKSPACE  &kp ENTER     &kp LEFT_SHIFT  &kp DEL       &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOLUME_UP>;
        };
    };
};
